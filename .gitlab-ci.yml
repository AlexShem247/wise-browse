image: maven:3.8.4-jdk-11

stages:
  - setup
  - build
  - test

before_script:
  # Update package list and install dependencies
  - apt-get update && apt-get install -y wget unzip gcc g++ make
  # Add Qt APT repository and install Qt
  - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6A6A0358
  - add-apt-repository 'deb https://download.qt.io/debian qt6.7 focal main'
  - apt-get update
  - apt-get install -y qt6-base-dev qt6-declarative-dev qt6-tools-dev qt6-wayland
  # Set up environment variables for Qt
  - export QT_INSTALL_DIR="/usr/lib/qt6"
  - export QT_QPA_PLATFORM_PLUGIN_PATH="${QT_INSTALL_DIR}/plugins/platforms"
  # Download and set up QtJambi
  - wget https://github.com/qtjambi/qtjambi/releases/download/v6.7.1/qtjambi-linux-x64-6.7.1.zip
  - unzip qtjambi-linux-x64-6.7.1.zip -d /opt/qtjambi
  - export QTJAMBI_LIBS="/opt/qtjambi/native"
  - export LD_LIBRARY_PATH="${QT_INSTALL_DIR}/lib:${QTJAMBI_LIBS}:$LD_LIBRARY_PATH"
  - export PATH="${QT_INSTALL_DIR}/bin:$PATH"
  - echo $PATH
  - echo $QT_QPA_PLATFORM_PLUGIN_PATH
  - echo $LD_LIBRARY_PATH

setup:
  stage: setup
  script:
    - echo "Setting up environment"

build:
  stage: build
  script:
    # Compile the Java project
    - mvn clean compile
    # Package the project
    - mvn package

test:
  stage: test
  script:
    # Run the Java application
    - java -Djava.library.path=$QTJAMBI_LIBS -jar target/your-java-app.jar

#artifacts:
 # paths:
  #  - target/*.jar
