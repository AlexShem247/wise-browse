image: maven:3.8.4-jdk-11

variables:
  QT_VERSION: "6.7.1"
  QT_INSTALL_DIR: "/opt/Qt"
  JAVA_HOME: "/usr/lib/jvm/java-11-openjdk"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

stages:
  - setup
  - build
  - test
  - release

before_script:
  # Update package list and install dependencies
  - apt-get update && apt-get install -y wget unzip gcc g++ make
  # Add Qt APT repository key and repository
  - wget -O - https://download.qt.io/debian/qt6.7.gpg | tee /usr/share/keyrings/qt-archive-keyring.gpg
  - echo 'deb [signed-by=/usr/share/keyrings/qt-archive-keyring.gpg] https://download.qt.io/debian qt6.7 focal main' | tee /etc/apt/sources.list.d/qt6.7.list
  - apt-get update
  - apt-get install -y qt6-base-dev qt6-declarative-dev qt6-tools-dev qt6-wayland
  # Download and set up QtJambi
  - wget https://github.com/qtjambi/qtjambi/releases/download/v6.7.1/qtjambi-linux-x64-6.7.1.zip
  - unzip qtjambi-linux-x64-6.7.1.zip -d /opt/qtjambi
  - export QTJAMBI_LIBS="/opt/qtjambi/native"
  - export LD_LIBRARY_PATH="${QT_INSTALL_DIR}/lib:${QTJAMBI_LIBS}:$LD_LIBRARY_PATH"
  - export PATH="${QT_INSTALL_DIR}/bin:$PATH"

setup:
  stage: setup
  script:
    - echo "Setting up environment"

build:
  stage: build
  script:
    - mvn clean compile
    - mvn package
  artifacts:
    paths:
      - target/*.jar

test:
  stage: test
  script:
    - java -Djava.library.path=$QTJAMBI_LIBS -jar target/your-java-app.jar

release:
  stage: release
  script:
    - echo "Creating GitLab release"
  release:
    tag_name: "v${CI_COMMIT_TAG}"
    description: "Release version ${CI_COMMIT_TAG}"
    assets:
      links:
        - name: "Jar file"
          url: "${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/download"
  only:
    - tags
